[{"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts":"1","/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx":"2","/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx":"3","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx":"4","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js":"5","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx":"6","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js":"7","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx":"8","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx":"9","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx":"10","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx":"11","/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx":"12","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx":"13","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx":"14","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js":"15","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx":"16","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx":"17","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx":"18","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx":"19","/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx":"20","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx":"21","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx":"22","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx":"23","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx":"24","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/index.tsx":"25","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/ChangePassword/index.tsx":"26","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/User/index.tsx":"27","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/actions/index.tsx":"28"},{"size":425,"mtime":1610038957366,"results":"29","hashOfConfig":"30"},{"size":251,"mtime":1610132864611,"results":"31","hashOfConfig":"30"},{"size":593,"mtime":1610119563790,"results":"32","hashOfConfig":"30"},{"size":1294,"mtime":1610238889368,"results":"33","hashOfConfig":"30"},{"size":1155,"mtime":1610230750975,"results":"34","hashOfConfig":"30"},{"size":1947,"mtime":1610317304317,"results":"35","hashOfConfig":"30"},{"size":434,"mtime":1610216970196,"results":"36","hashOfConfig":"30"},{"size":1140,"mtime":1610393726994,"results":"37","hashOfConfig":"30"},{"size":1147,"mtime":1610384994966,"results":"38","hashOfConfig":"30"},{"size":179,"mtime":1610384930521,"results":"39","hashOfConfig":"30"},{"size":88,"mtime":1610046956500,"results":"40","hashOfConfig":"30"},{"size":1277,"mtime":1610316490047,"results":"41","hashOfConfig":"30"},{"size":182,"mtime":1610315701222,"results":"42","hashOfConfig":"30"},{"size":7689,"mtime":1610387221873,"results":"43","hashOfConfig":"30"},{"size":1680,"mtime":1610239045575,"results":"44","hashOfConfig":"30"},{"size":1475,"mtime":1610317627168,"results":"45","hashOfConfig":"30"},{"size":461,"mtime":1610139019676,"results":"46","hashOfConfig":"30"},{"size":795,"mtime":1610387169265,"results":"47","hashOfConfig":"30"},{"size":698,"mtime":1610386893810,"results":"48","hashOfConfig":"30"},{"size":792,"mtime":1610386626645,"results":"49","hashOfConfig":"30"},{"size":947,"mtime":1610381079821,"results":"50","hashOfConfig":"30"},{"size":740,"mtime":1610379410611,"results":"51","hashOfConfig":"30"},{"size":1699,"mtime":1610317090150,"results":"52","hashOfConfig":"30"},{"size":769,"mtime":1610382299339,"results":"53","hashOfConfig":"30"},{"size":316,"mtime":1610377656946,"results":"54","hashOfConfig":"30"},{"size":3062,"mtime":1610381160750,"results":"55","hashOfConfig":"30"},{"size":6131,"mtime":1610385904079,"results":"56","hashOfConfig":"30"},{"size":1862,"mtime":1610393732946,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"17sdh8e",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts",[],["123","124"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx",[],["125","126"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js",[],["127","128"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx",["129"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx",["130"],"import { useUserState } from \"../auth/providers\";\nimport Profil from \"./Profil\";\n\nexport default function Home() {\n    const { currentUser } = useUserState();\n    return <Profil />\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx",["131","132"],"import { request } from \"../../../helpers/axios.intercepter\";\nimport { IChangePassword, ICredentials, ICurrentUserDetails, IForgottenPassword } from \"../../../interfaces\";\nimport { ERROR, LOADING, SIGN_IN, SIGN_OUT } from \"../constants\";\n\nexport const signIn = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICredentials) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            // dispatch({\n            //     type: SIGN_IN,\n            //     data: {\n            //         isLoggedIn: true,\n            //         currentUser: values\n            //     }\n            // });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const getCurrentUserDetails = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICurrentUserDetails) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/update',\n            method: 'PUT',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const forgottenPassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IForgottenPassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: values\n        });\n        debugger\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const changePassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IChangePassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const logout = async (dispatch: React.Dispatch<{ type: string, data: any }>) => {\n    try {\n        dispatch({\n            type: SIGN_OUT,\n            data: {\n                isLoggedIn: false,\n                currentUser: null\n            }\n        });\n\n        localStorage.removeItem('token');\n\n\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx",[],["133","134"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx",["135"],"import { Form, Formik, FormikHelpers } from \"formik\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { CustomBox } from \"../../../../components/CustomBox\"\nimport { CustomButton } from \"../../../../components/CustomButton\"\nimport { CustomField } from \"../../../../components/Field\"\nimport { IForgottenPassword } from \"../../../../interfaces\"\nimport { forgottenPassword } from \"../../actions\"\nimport { useDispatchUser } from \"../../providers\"\n\nexport const ForgottenPassword = () => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ email }: IForgottenPassword, { setSubmitting, }: FormikHelpers<{ email: string }>) => {\n        const status = await forgottenPassword(dispatch, { email })\n\n    }\n    return (\n\n\n        <Formik\n            initialValues={{\n                email: '',\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { email }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <CustomBox maxHeight={200}>\n                                <h4 style={{ textAlign: \"center\" }}>Pour recuperer votre compte saisir l'email de recuperation</h4>\n                                <CustomField field=\"email\" value={email} handleChange={handleChange} label=\"\" type=\"text\" />\n                                <CustomButton handleSubmit={handleSubmit} label=\"Valider\" disbaled={false} />\n                                <p><Link to=\"/login\">Se connecter ?</Link></p>\n                            </CustomBox>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/index.tsx",["136"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/ChangePassword/index.tsx",["137","138"],"import { Form, Formik, FormikHelpers } from \"formik\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { CustomButton } from \"../../../../components/CustomButton\";\nimport { CustomField } from \"../../../../components/Field\";\nimport { IChangePassword } from \"../../../../interfaces\";\nimport { changePassword } from \"../../../auth/actions\";\nimport { useDispatchUser } from \"../../../auth/providers\";\n\nconst ContentFormWrapper = styled.div`\n    border: 2px solid green;\n    border-radius: 10% 10% 10% 10%;\n    background: rgb(27,195,190);\nbackground: linear-gradient(180deg, rgba(27,195,190,1) 0%, rgba(27,195,75,1) 56%);\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-template-areas: \"input1 input1 div1 div1\" \"input2 input2 input3 input3\" \"div2  div2 button2 button1\";\n    gap: 20px;\n    padding: 30px;\n    width: 100%;\n    align-items: center;\n`\n\nconst ChangePassword = ({ modifying }: { modifying?: boolean }) => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ oldPassword, newPassword, validatePassword }: IChangePassword, { setSubmitting, }: FormikHelpers<IChangePassword>) => {\n        const status = await changePassword(dispatch, { oldPassword, newPassword, validatePassword })\n\n    }\n\n    const handleCancel = () => { }\n    return (\n\n\n        <Formik\n            initialValues={{\n                oldPassword: '',\n                newPassword: '',\n                validatePassword: ''\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { oldPassword, newPassword, validatePassword }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <ContentFormWrapper>\n                                <CustomField className=\"input1\" modifying={modifying} type=\"password\" field=\"oldPassword\" value={oldPassword} handleChange={handleChange} label=\"MDP actuel\" />\n                                <div className=\"div1\"></div>\n                                <CustomField className=\"input2\" modifying={modifying} type=\"password\" field=\"newPassword\" value={newPassword} handleChange={handleChange} label=\"nouveau mdp\" />\n                                <CustomField className=\"input3\" type=\"password\" modifying={modifying} field=\"validatePassword\" value={validatePassword} handleChange={handleChange} label=\"confirmer mdp\" />\n                                <div className=\"div2\"></div>\n                                <CustomButton className=\"button1\" handleSubmit={handleSubmit} label=\"Valider\" disbaled={oldPassword.length > 0 && newPassword.length > 0 && validatePassword.length > 0} />\n                                <Link to=\"/home\" className=\"button2\">\n                                </Link>\n                            </ContentFormWrapper>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}\n\nexport default ChangePassword;","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/User/index.tsx",["139"],"import { Form, Formik, FormikHelpers } from \"formik\";\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { CustomButton } from \"../../../../components/CustomButton\";\nimport { CustomField } from \"../../../../components/Field\";\nimport { IUpdateProfil } from \"../../../../interfaces\";\nimport { useDispatchUser, useUserState } from \"../../../auth/providers\";\nimport { updateProfil } from \"../../actions\";\nimport ChangePassword from \"../ChangePassword\";\n\nconst HeadUserWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 250px 3fr 100px 100px;\n    grid-template-rows: 1fr;\n    grid-template-areas: \"title div1 button1 button2\";\n    justify-content: space-between;\n    align-items: center;\n    padding: 5px;\n    width: 100%;\n    height: 50px;\n`\nconst ContentUserWrapper = styled.div`\n    border: 2px solid green;\n    border-radius: 10% 10% 10% 10%;\n    background: rgb(27,195,190);\n    background: linear-gradient(180deg, rgba(27,195,190,1) 0%, rgba(27,195,75,1) 56%);\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    padding: 30px;\n    width: 100%;\n    align-items: center;\n`\n\nconst ContentFormWrapper = styled.div`\n    border: 2px solid green;\n    border-radius: 10% 10% 10% 10%;\n    background: rgb(27,195,190);\n    background: linear-gradient(180deg, rgba(27,195,190,1) 0%, rgba(27,195,75,1) 56%);\n    display: grid;\n    grid-template-columns: repeat(2, 1fr);\n    grid-template-rows: 1fr 1fr 1fr 1fr;\n    grid-template-areas: \"title title\" \"input1 input2\" \"input3 input4\" \"div1 button1\" ;\n    gap: 20px;\n    padding: 30px;\n    width: 100%;\n    align-items: center;\n`\n\n\nexport default function User() {\n    const { currentUser } = useUserState()\n    const [modifying, setModifying] = useState(false);\n\n    const { dispatch } = useDispatchUser()\n\n    const [modifyingPassword, setModifyingPassword] = useState(false);\n    const handleSubmit = async (values: IUpdateProfil, _formikHelpers: FormikHelpers<IUpdateProfil>) => {\n        const status = await updateProfil(dispatch, values, currentUser?.id);\n        console.log(status);\n\n    }\n    const handleCancel = () => { }\n\n    const handleClose = (event: React.FormEvent<HTMLButtonElement>) => {\n        setModifying(false);\n    }\n    const handleOpen = (event: React.FormEvent<HTMLButtonElement>) => {\n        setModifying(true);\n    }\n    const handleClosePassword = (event: React.FormEvent<HTMLButtonElement>) => {\n        setModifyingPassword(false);\n    }\n    const handleOpenPassword = (event: React.FormEvent<HTMLButtonElement>) => {\n        setModifyingPassword(true);\n    }\n    return <>\n        <HeadUserWrapper>\n            <h5 className=\"title\">Les details de votre profil</h5>\n            <CustomButton disbaled={modifying} handleClick={handleOpen} label=\"Modifier\" className=\"button1\" />\n            <div className=\"div1\"></div>\n            {<CustomButton disbaled={!modifying} handleClick={handleClose} label=\"Annuler\" className=\"button2\" />}\n        </HeadUserWrapper>\n        {<Formik\n                    initialValues={{\n                nom: '' + currentUser?.nom,\n                prenom: '' + currentUser?.prenom,\n                email: '' + currentUser?.email,\n                login: '' + currentUser?.login\n                    }}\n                    onSubmit={handleSubmit}\n                >\n                    {\n                        ({ handleChange, values: { nom, prenom, email, login }, handleSubmit }) => {\n                            return (\n                                <Form>\n                                    {\n                                        modifying\n                                            ? <ContentFormWrapper>\n                                        <h4 style={{ textAlign: \"center\" }} className=\"title\">Informations personnelles </h4>\n                                        <CustomField type=\"text\" field=\"nom\" value={nom} className=\"input1\" handleChange={handleChange} label=\"Nom\" />\n                                        <CustomField type=\"text\" field=\"prenom\" value={prenom} className=\"input2\" handleChange={handleChange} label=\"Prenom\" />\n                                        <CustomField type=\"text\" field=\"login\" value={login} className=\"input3\" handleChange={handleChange} label=\"Nom d'utilisateur\" />\n                                        <CustomField type=\"text\" field=\"email\" value={email} className=\"input4\" handleChange={handleChange} label=\"Email\" />\n                                        <CustomButton handleSubmit={handleSubmit} label=\"Valider\" className=\"button1\" disbaled={false} />\n                                        <Link to=\"/home\" className=\"div1\">\n                                        </Link>\n                                            </ContentFormWrapper>\n                                            : <ContentUserWrapper>\n                                                Nom complet : <p> {currentUser?.nom} {currentUser?.prenom} </p>\n                                                Profile : <p> {currentUser?.profil.name} </p>\n                                                Nom d'utilisateur : <p>{currentUser?.login}</p>\n                                                Email : <p>{currentUser?.email}</p>\n                                            </ContentUserWrapper>\n                                    }\n                                </Form>\n                            )\n                        }\n                    }\n        </Formik>\n        }\n        {/* <ContentUserWrapper> */}\n        <HeadUserWrapper>\n            <h5 className=\"title\">Changement de mot de passe :</h5>\n            <div className=\"div1\"></div>\n            <CustomButton className=\"button1\" disbaled={modifyingPassword} handleClick={handleOpenPassword} label=\"Modifier\" />\n            {<CustomButton className=\"button2\" disbaled={!modifyingPassword} handleClick={handleClosePassword} label=\"Annuler\" />}\n        </HeadUserWrapper>\n        {\n            <ChangePassword modifying={modifyingPassword} />\n        }\n\n        {/* </ContentUserWrapper> */}\n    </>\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/actions/index.tsx",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":11,"column":30,"nodeType":"148","messageId":"149","endLine":11,"endColumn":33},{"ruleId":"150","severity":1,"message":"151","line":5,"column":13,"nodeType":"152","messageId":"153","endLine":5,"endColumn":24},{"ruleId":"150","severity":1,"message":"154","line":162,"column":41,"nodeType":"152","messageId":"153","endLine":162,"endColumn":47},{"ruleId":"150","severity":1,"message":"154","line":233,"column":41,"nodeType":"152","messageId":"153","endLine":233,"endColumn":47},{"ruleId":"140","replacedBy":"155"},{"ruleId":"142","replacedBy":"156"},{"ruleId":"150","severity":1,"message":"157","line":15,"column":15,"nodeType":"152","messageId":"153","endLine":15,"endColumn":21},{"ruleId":"150","severity":1,"message":"151","line":6,"column":13,"nodeType":"152","messageId":"153","endLine":6,"endColumn":24},{"ruleId":"150","severity":1,"message":"157","line":30,"column":15,"nodeType":"152","messageId":"153","endLine":30,"endColumn":21},{"ruleId":"150","severity":1,"message":"158","line":34,"column":11,"nodeType":"152","messageId":"153","endLine":34,"endColumn":23},{"ruleId":"150","severity":1,"message":"158","line":64,"column":11,"nodeType":"152","messageId":"153","endLine":64,"endColumn":23},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],["159"],["160"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'result' is assigned a value but never used.",["159"],["160"],"'status' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]