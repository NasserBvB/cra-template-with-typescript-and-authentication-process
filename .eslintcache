[{"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts":"1","/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx":"2","/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx":"3","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx":"4","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js":"5","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx":"6","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js":"7","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx":"8","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx":"9","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx":"10","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx":"11","/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx":"12","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx":"13","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx":"14","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js":"15","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx":"16","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx":"17","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx":"18","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx":"19","/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx":"20","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx":"21","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx":"22","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx":"23","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx":"24","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/index.tsx":"25","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/ChangePassword/index.tsx":"26","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/User/index.tsx":"27","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/actions/index.tsx":"28"},{"size":425,"mtime":1610038957366,"results":"29","hashOfConfig":"30"},{"size":251,"mtime":1610132864611,"results":"31","hashOfConfig":"30"},{"size":593,"mtime":1610119563790,"results":"32","hashOfConfig":"30"},{"size":1294,"mtime":1610238889368,"results":"33","hashOfConfig":"30"},{"size":1155,"mtime":1610230750975,"results":"34","hashOfConfig":"30"},{"size":1947,"mtime":1610317304317,"results":"35","hashOfConfig":"30"},{"size":434,"mtime":1610216970196,"results":"36","hashOfConfig":"30"},{"size":1140,"mtime":1610393726994,"results":"37","hashOfConfig":"30"},{"size":1147,"mtime":1610384994966,"results":"38","hashOfConfig":"30"},{"size":179,"mtime":1610384930521,"results":"39","hashOfConfig":"30"},{"size":88,"mtime":1610046956500,"results":"40","hashOfConfig":"30"},{"size":1405,"mtime":1610445592925,"results":"41","hashOfConfig":"30"},{"size":150,"mtime":1610445624929,"results":"42","hashOfConfig":"30"},{"size":7720,"mtime":1610399833261,"results":"43","hashOfConfig":"30"},{"size":1682,"mtime":1610449817880,"results":"44","hashOfConfig":"30"},{"size":1665,"mtime":1610399505077,"results":"45","hashOfConfig":"30"},{"size":461,"mtime":1610139019676,"results":"46","hashOfConfig":"30"},{"size":1092,"mtime":1610449921406,"results":"47","hashOfConfig":"30"},{"size":1351,"mtime":1610449446336,"results":"48","hashOfConfig":"30"},{"size":792,"mtime":1610386626645,"results":"49","hashOfConfig":"30"},{"size":947,"mtime":1610381079821,"results":"50","hashOfConfig":"30"},{"size":740,"mtime":1610379410611,"results":"51","hashOfConfig":"30"},{"size":1699,"mtime":1610317090150,"results":"52","hashOfConfig":"30"},{"size":895,"mtime":1610448025602,"results":"53","hashOfConfig":"30"},{"size":316,"mtime":1610377656946,"results":"54","hashOfConfig":"30"},{"size":3085,"mtime":1610447505852,"results":"55","hashOfConfig":"30"},{"size":6130,"mtime":1610397122390,"results":"56","hashOfConfig":"30"},{"size":3518,"mtime":1610446908467,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"17sdh8e",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts",[],["121","122"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx",[],["123","124"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js",[],["125","126"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx",["127"],"import { Form, Formik, FormikHelpers } from 'formik';\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { CustomBox } from '../../../../components/CustomBox';\nimport { CustomButton } from '../../../../components/CustomButton';\nimport { CustomField } from '../../../../components/Field';\nimport { IForm } from '../../../../interfaces';\nimport { signIn } from \"../../actions/index\";\nimport { useDispatchUser } from '../../providers';\n\nconst Login: React.FC<{}> = ({ }) => {\n    const history = useHistory();\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ login, password }: IForm, { setSubmitting, }: FormikHelpers<IForm>) => {\n        const status = await signIn(dispatch, { password, login })\n        if (status) {\n            history.push('/home')\n        }\n    }\n\n\n    return (\n        <Formik\n            initialValues={{\n                login: '',\n                password: ''\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { password, login }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <CustomBox maxHeight={300}>\n                                <h3>Se connecter</h3>\n                                <CustomField field=\"login\" value={login} handleChange={handleChange} label=\"Login\" type=\"text\" />\n                                <CustomField field=\"password\" value={password} handleChange={handleChange} label=\"Password\" type=\"password\" />\n                                <CustomButton handleSubmit={handleSubmit} label=\"Connecter\" disbaled={false} />\n                                <p>Mot de passe oublie ? <Link to=\"/forgotten-password\">Recuperer</Link></p>\n                            </CustomBox>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}\n\nexport default Login;","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx",["128","129"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx",["130","131"],"import { request } from \"../../../helpers/axios.intercepter\";\nimport { IChangePassword, ICredentials, ICurrentUserDetails, IForgottenPassword } from \"../../../interfaces\";\nimport { ERROR, LOADING, SIGN_IN, SIGN_OUT } from \"../constants\";\n\nexport const signIn = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICredentials) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            // dispatch({\n            //     type: SIGN_IN,\n            //     data: {\n            //         isLoggedIn: true,\n            //         currentUser: values\n            //     }\n            // });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n        throw new Error(error);\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const getCurrentUserDetails = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICurrentUserDetails) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/update',\n            method: 'PUT',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        throw new Error(error);\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n}\n\nexport const forgottenPassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IForgottenPassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: values\n        });\n        debugger\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        throw new Error(error);\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const changePassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IChangePassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n        throw new Error(error);\n\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const logout = async (dispatch: React.Dispatch<{ type: string, data: any }>) => {\n    try {\n        dispatch({\n            type: SIGN_OUT,\n            data: {\n                isLoggedIn: false,\n                currentUser: null\n            }\n        });\n\n        localStorage.removeItem('token');\n\n\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n        throw new Error(error);\n\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx",["132"],"import { useEffect, useRef } from \"react\";\nimport { useErrorBoundary } from \"use-error-boundary\";\nimport Loading from \"../../components/Loading\";\nimport { useUserState } from \"../../features/auth/providers\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport { ContainerWrapper, ContentWrapper, ErrorWrapper, FooterWrapper, HeaderWrapper, MenuWrapper } from \"./styles\";\n\nconst DashboardLayout: React.FC<{}> = ({ children }) => {\n\n    const { loading, error } = useUserState();\n    const errorRef: { current: HTMLDivElement | null } = useRef(null);\n\n    const { ErrorBoundary, didCatch, error: catchedError } = useErrorBoundary()\n\n    useEffect(() => {\n        if (didCatch && (catchedError.message || catchedError.code)) {\n            errorRef.current && errorRef.current.removeAttribute('hidden');\n            setTimeout(() => {\n                errorRef.current && errorRef.current.setAttribute('hidden', 'true');\n            }, 3000)\n        }\n    }, [error])\n    return (\n        didCatch ? (\n            <ErrorWrapper>\n                <p>An error has been catched: {catchedError.message}</p>\n            </ErrorWrapper>\n        ) :\n            <ErrorBoundary>\n            <ContainerWrapper>\n            <HeaderWrapper>\n                <Header />\n            </HeaderWrapper>\n        <ContentWrapper>\n                        {!loading ? children : <Loading />}\n        </ContentWrapper>\n            <MenuWrapper>\n                Menu\n            </MenuWrapper>\n            <FooterWrapper>\n                <Footer />\n            </FooterWrapper>\n        </ContainerWrapper>\n            </ErrorBoundary>\n    )\n}\n\nexport default DashboardLayout;","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx",["133"],"import { Form, Formik, FormikHelpers } from \"formik\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { CustomBox } from \"../../../../components/CustomBox\"\nimport { CustomButton } from \"../../../../components/CustomButton\"\nimport { CustomField } from \"../../../../components/Field\"\nimport { IForgottenPassword } from \"../../../../interfaces\"\nimport { forgottenPassword } from \"../../actions\"\nimport { useDispatchUser } from \"../../providers\"\n\nexport const ForgottenPassword = () => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ email }: IForgottenPassword, { setSubmitting, }: FormikHelpers<{ email: string }>) => {\n        const status = await forgottenPassword(dispatch, { email })\n\n    }\n    return (\n\n\n        <Formik\n            initialValues={{\n                email: '',\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { email }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <CustomBox maxHeight={200}>\n                                <h4 style={{ textAlign: \"center\" }}>Pour recuperer votre compte saisir l'email de recuperation</h4>\n                                <CustomField field=\"email\" value={email} handleChange={handleChange} label=\"\" type=\"text\" />\n                                <CustomButton handleSubmit={handleSubmit} label=\"Valider\" disbaled={false} />\n                                <p><Link to=\"/login\">Se connecter ?</Link></p>\n                            </CustomBox>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/index.tsx",["134"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/ChangePassword/index.tsx",["135","136"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/User/index.tsx",["137"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/actions/index.tsx",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"139","replacedBy":"145"},{"ruleId":"141","replacedBy":"146"},{"ruleId":"147","severity":1,"message":"148","line":11,"column":30,"nodeType":"149","messageId":"150","endLine":11,"endColumn":33},{"ruleId":"151","severity":1,"message":"152","line":1,"column":10,"nodeType":"153","messageId":"154","endLine":1,"endColumn":22},{"ruleId":"151","severity":1,"message":"155","line":2,"column":8,"nodeType":"153","messageId":"154","endLine":2,"endColumn":14},{"ruleId":"151","severity":1,"message":"156","line":159,"column":41,"nodeType":"153","messageId":"154","endLine":159,"endColumn":47},{"ruleId":"151","severity":1,"message":"156","line":230,"column":41,"nodeType":"153","messageId":"154","endLine":230,"endColumn":47},{"ruleId":"157","severity":1,"message":"158","line":23,"column":8,"nodeType":"159","endLine":23,"endColumn":15,"suggestions":"160"},{"ruleId":"151","severity":1,"message":"161","line":15,"column":15,"nodeType":"153","messageId":"154","endLine":15,"endColumn":21},{"ruleId":"151","severity":1,"message":"162","line":6,"column":13,"nodeType":"153","messageId":"154","endLine":6,"endColumn":24},{"ruleId":"151","severity":1,"message":"161","line":31,"column":15,"nodeType":"153","messageId":"154","endLine":31,"endColumn":21},{"ruleId":"151","severity":1,"message":"163","line":35,"column":11,"nodeType":"153","messageId":"154","endLine":35,"endColumn":23},{"ruleId":"151","severity":1,"message":"163","line":64,"column":11,"nodeType":"153","messageId":"154","endLine":64,"endColumn":23},{"ruleId":"151","severity":1,"message":"156","line":87,"column":41,"nodeType":"153","messageId":"154","endLine":87,"endColumn":47},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],["164"],["165"],["164"],["165"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'useUserState' is defined but never used.","Identifier","unusedVar","'Profil' is defined but never used.","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'catchedError.code', 'catchedError.message', and 'didCatch'. Either include them or remove the dependency array.","ArrayExpression",["166"],"'status' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [catchedError.code, catchedError.message, didCatch, error]",{"range":"169","text":"170"},[973,980],"[catchedError.code, catchedError.message, didCatch, error]"]