[{"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts":"1","/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx":"2","/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx":"3","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx":"4","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js":"5","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx":"6","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js":"7","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx":"8","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx":"9","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx":"10","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx":"11","/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx":"12","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx":"13","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx":"14","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js":"15","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx":"16","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx":"17","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx":"18","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx":"19","/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx":"20","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx":"21","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx":"22","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx":"23","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx":"24","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ChangePassword/index.tsx":"25"},{"size":425,"mtime":1610038957366,"results":"26","hashOfConfig":"27"},{"size":251,"mtime":1610132864611,"results":"28","hashOfConfig":"27"},{"size":593,"mtime":1610119563790,"results":"29","hashOfConfig":"27"},{"size":1294,"mtime":1610238889368,"results":"30","hashOfConfig":"27"},{"size":1155,"mtime":1610230750975,"results":"31","hashOfConfig":"27"},{"size":1930,"mtime":1610312204912,"results":"32","hashOfConfig":"27"},{"size":434,"mtime":1610216970196,"results":"33","hashOfConfig":"27"},{"size":931,"mtime":1610120375757,"results":"34","hashOfConfig":"27"},{"size":1123,"mtime":1610132918045,"results":"35","hashOfConfig":"27"},{"size":133,"mtime":1610120344185,"results":"36","hashOfConfig":"27"},{"size":88,"mtime":1610046956500,"results":"37","hashOfConfig":"27"},{"size":1278,"mtime":1610218183989,"results":"38","hashOfConfig":"27"},{"size":177,"mtime":1610120905319,"results":"39","hashOfConfig":"27"},{"size":6862,"mtime":1610314910667,"results":"40","hashOfConfig":"27"},{"size":1680,"mtime":1610239045575,"results":"41","hashOfConfig":"27"},{"size":1351,"mtime":1610139104995,"results":"42","hashOfConfig":"27"},{"size":461,"mtime":1610139019676,"results":"43","hashOfConfig":"27"},{"size":625,"mtime":1610141221842,"results":"44","hashOfConfig":"27"},{"size":644,"mtime":1610239996648,"results":"45","hashOfConfig":"27"},{"size":530,"mtime":1610314797566,"results":"46","hashOfConfig":"27"},{"size":885,"mtime":1610223195655,"results":"47","hashOfConfig":"27"},{"size":560,"mtime":1610222475146,"results":"48","hashOfConfig":"27"},{"size":1682,"mtime":1610229284773,"results":"49","hashOfConfig":"27"},{"size":775,"mtime":1610230901319,"results":"50","hashOfConfig":"27"},{"size":2340,"mtime":1610223298466,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"17sdh8e",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"59"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts",[],["109","110"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx",[],["111","112"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js",[],["113","114"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx",["115"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx",["116","117"],"import { request } from \"../../../helpers/axios.intercepter\";\nimport { IChangePassword, ICredentials, ICurrentUserDetails, IForgottenPassword } from \"../../../interfaces\";\nimport { ERROR, LOADING, SIGN_IN } from \"../constants\";\n\nexport const signIn = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICredentials) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            // dispatch({\n            //     type: SIGN_IN,\n            //     data: {\n            //         isLoggedIn: true,\n            //         currentUser: values\n            //     }\n            // });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const getCurrentUserDetails = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICurrentUserDetails) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const forgottenPassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IForgottenPassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: values\n        });\n        debugger\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const changePassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IChangePassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx",[],["118","119"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx",["120"],"import { Form, Formik, FormikHelpers } from \"formik\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { CustomBox } from \"../../../../components/CustomBox\"\nimport { CustomButton } from \"../../../../components/CustomButton\"\nimport { CustomField } from \"../../../../components/Field\"\nimport { IForgottenPassword } from \"../../../../interfaces\"\nimport { forgottenPassword } from \"../../actions\"\nimport { useDispatchUser } from \"../../providers\"\n\nexport const ForgottenPassword = () => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ email }: IForgottenPassword, { setSubmitting, }: FormikHelpers<{ email: string }>) => {\n        const status = await forgottenPassword(dispatch, { email })\n\n    }\n    return (\n\n\n        <Formik\n            initialValues={{\n                email: '',\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { email }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <CustomBox maxHeight={200}>\n                                <h4 style={{ textAlign: \"center\" }}>Pour recuperer votre compte saisir l'email de recuperation</h4>\n                                <CustomField field=\"email\" value={email} handleChange={handleChange} label=\"\" type=\"text\" />\n                                <CustomButton handleSubmit={handleSubmit} label=\"Valider\" />\n                                <p><Link to=\"/login\">Se connecter ?</Link></p>\n                            </CustomBox>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ChangePassword/index.tsx",["121"],"import { Form, Formik, FormikHelpers } from \"formik\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CustomBox } from \"../../../../components/CustomBox\";\nimport { CustomButton } from \"../../../../components/CustomButton\";\nimport { CustomField } from \"../../../../components/Field\";\nimport { IChangePassword } from \"../../../../interfaces\";\nimport { changePassword } from \"../../actions\";\nimport { useDispatchUser } from \"../../providers\";\n\nconst ChangePassword = () => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ oldPassword, newPassword, validatePassword }: IChangePassword, { setSubmitting, }: FormikHelpers<IChangePassword>) => {\n        const status = await changePassword(dispatch, { oldPassword, newPassword, validatePassword })\n\n    }\n\n    const handleCancel = () => { }\n    return (\n\n\n        <Formik\n            initialValues={{\n                oldPassword: '',\n                newPassword: '',\n                validatePassword: ''\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { oldPassword, newPassword, validatePassword }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <CustomBox maxHeight={400}>\n                                <h4 style={{ textAlign: \"center\" }}>Changer votre mot de passe</h4>\n                                <CustomField type=\"password\" field=\"oldPassword\" value={oldPassword} handleChange={handleChange} label=\"MDP actuel\" />\n                                <CustomField type=\"password\" field=\"newPassword\" value={newPassword} handleChange={handleChange} label=\"nouveau mdp\" />\n                                <CustomField type=\"password\" field=\"validatePassword\" value={validatePassword} handleChange={handleChange} label=\"confirmer mdp\" />\n                                <CustomButton handleSubmit={handleSubmit} label=\"Valider\" />\n                                <Link to=\"/home\">\n                                    <CustomButton handleSubmit={handleCancel} label=\"Annuler\" />\n                                </Link>\n                            </CustomBox>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}\n\nexport default ChangePassword;",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"122","replacedBy":"126"},{"ruleId":"124","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":11,"column":30,"nodeType":"130","messageId":"131","endLine":11,"endColumn":33},{"ruleId":"132","severity":1,"message":"133","line":162,"column":41,"nodeType":"134","messageId":"135","endLine":162,"endColumn":47},{"ruleId":"132","severity":1,"message":"133","line":233,"column":41,"nodeType":"134","messageId":"135","endLine":233,"endColumn":47},{"ruleId":"122","replacedBy":"136"},{"ruleId":"124","replacedBy":"137"},{"ruleId":"132","severity":1,"message":"138","line":15,"column":15,"nodeType":"134","messageId":"135","endLine":15,"endColumn":21},{"ruleId":"132","severity":1,"message":"138","line":15,"column":15,"nodeType":"134","messageId":"135","endLine":15,"endColumn":21},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],["139"],["140"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar",["139"],["140"],"'status' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]