[{"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts":"1","/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx":"2","/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx":"3","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx":"4","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js":"5","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx":"6","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js":"7","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx":"8","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx":"9","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx":"10","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx":"11","/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx":"12","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx":"13","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx":"14","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js":"15","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx":"16","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx":"17","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx":"18","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx":"19","/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx":"20","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx":"21","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx":"22","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx":"23","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx":"24","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/index.tsx":"25","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/ChangePassword/index.tsx":"26","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/User/index.tsx":"27"},{"size":425,"mtime":1610038957366,"results":"28","hashOfConfig":"29"},{"size":251,"mtime":1610132864611,"results":"30","hashOfConfig":"29"},{"size":593,"mtime":1610119563790,"results":"31","hashOfConfig":"29"},{"size":1294,"mtime":1610238889368,"results":"32","hashOfConfig":"29"},{"size":1155,"mtime":1610230750975,"results":"33","hashOfConfig":"29"},{"size":1947,"mtime":1610317304317,"results":"34","hashOfConfig":"29"},{"size":434,"mtime":1610216970196,"results":"35","hashOfConfig":"29"},{"size":931,"mtime":1610120375757,"results":"36","hashOfConfig":"29"},{"size":1123,"mtime":1610132918045,"results":"37","hashOfConfig":"29"},{"size":133,"mtime":1610120344185,"results":"38","hashOfConfig":"29"},{"size":88,"mtime":1610046956500,"results":"39","hashOfConfig":"29"},{"size":1277,"mtime":1610316490047,"results":"40","hashOfConfig":"29"},{"size":182,"mtime":1610315701222,"results":"41","hashOfConfig":"29"},{"size":6862,"mtime":1610314910667,"results":"42","hashOfConfig":"29"},{"size":1680,"mtime":1610239045575,"results":"43","hashOfConfig":"29"},{"size":1475,"mtime":1610317627168,"results":"44","hashOfConfig":"29"},{"size":461,"mtime":1610139019676,"results":"45","hashOfConfig":"29"},{"size":542,"mtime":1610317558471,"results":"46","hashOfConfig":"29"},{"size":644,"mtime":1610239996648,"results":"47","hashOfConfig":"29"},{"size":517,"mtime":1610377226591,"results":"48","hashOfConfig":"29"},{"size":947,"mtime":1610381079821,"results":"49","hashOfConfig":"29"},{"size":740,"mtime":1610379410611,"results":"50","hashOfConfig":"29"},{"size":1699,"mtime":1610317090150,"results":"51","hashOfConfig":"29"},{"size":769,"mtime":1610382299339,"results":"52","hashOfConfig":"29"},{"size":316,"mtime":1610377656946,"results":"53","hashOfConfig":"29"},{"size":3062,"mtime":1610381160750,"results":"54","hashOfConfig":"29"},{"size":5639,"mtime":1610383306704,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"17sdh8e",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/nasser/Desktop/projects/pfmustelea-finance/src/reportWebVitals.ts",[],["118","119"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/App.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/index.tsx",[],["120","121"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/main/styles.js",[],["122","123"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/index.tsx",["124"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/SignIn/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/reducers/userReducer.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/providers/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/constants/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Loading/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/routes.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/index.tsx",["125"],"import { useUserState } from \"../auth/providers\";\nimport Profil from \"./Profil\";\n\nexport default function Home() {\n    const { currentUser } = useUserState();\n    return <Profil />\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/actions/index.tsx",["126","127"],"import { request } from \"../../../helpers/axios.intercepter\";\nimport { IChangePassword, ICredentials, ICurrentUserDetails, IForgottenPassword } from \"../../../interfaces\";\nimport { ERROR, LOADING, SIGN_IN } from \"../constants\";\n\nexport const signIn = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICredentials) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            // dispatch({\n            //     type: SIGN_IN,\n            //     data: {\n            //         isLoggedIn: true,\n            //         currentUser: values\n            //     }\n            // });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const getCurrentUserDetails = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: ICurrentUserDetails) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: result\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const forgottenPassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IForgottenPassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: values\n        });\n        debugger\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}\n\nexport const changePassword = async (dispatch: React.Dispatch<{ type: string, data: any }>, values: IChangePassword) => {\n    try {\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: true\n            }\n        });\n\n        const { ok, status, statusText, result } = await request({\n            url: '/utilisateur/login',\n            method: 'POST',\n            body: JSON.stringify(values),\n        });\n\n        if (ok) {\n            dispatch({\n                type: SIGN_IN,\n                data: {\n                    isLoggedIn: true,\n                    currentUser: values\n                }\n            });\n        } else {\n            dispatch({\n                type: ERROR,\n                data: {\n                    error: {\n                        code: status,\n                        message: statusText\n                    }\n                }\n            });\n            dispatch({\n                type: LOADING,\n                data: {\n                    loading: false\n                }\n            })\n            return false;\n        }\n    } catch (error) {\n        dispatch({\n            type: ERROR,\n            data: {\n                error: {\n                    code: error.errorCode,\n                    message: error.message\n                }\n            }\n        })\n        dispatch({\n            type: LOADING,\n            data: {\n                loading: false\n            }\n        })\n\n        return false;\n    }\n\n    dispatch({\n        type: LOADING,\n        data: {\n            loading: false\n        }\n    })\n\n    return true;\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/styles.js",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/dashboard/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Footer.tsx",[],["128","129"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/layout/Header.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Logo/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/helpers/axios.intercepter.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/Field/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomButton/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/auth/modules/ForgottenPassword/index.tsx",["130"],"import { Form, Formik, FormikHelpers } from \"formik\"\nimport React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { CustomBox } from \"../../../../components/CustomBox\"\nimport { CustomButton } from \"../../../../components/CustomButton\"\nimport { CustomField } from \"../../../../components/Field\"\nimport { IForgottenPassword } from \"../../../../interfaces\"\nimport { forgottenPassword } from \"../../actions\"\nimport { useDispatchUser } from \"../../providers\"\n\nexport const ForgottenPassword = () => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ email }: IForgottenPassword, { setSubmitting, }: FormikHelpers<{ email: string }>) => {\n        const status = await forgottenPassword(dispatch, { email })\n\n    }\n    return (\n\n\n        <Formik\n            initialValues={{\n                email: '',\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { email }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <CustomBox maxHeight={200}>\n                                <h4 style={{ textAlign: \"center\" }}>Pour recuperer votre compte saisir l'email de recuperation</h4>\n                                <CustomField field=\"email\" value={email} handleChange={handleChange} label=\"\" type=\"text\" />\n                                <CustomButton handleSubmit={handleSubmit} label=\"Valider\" disbaled={false} />\n                                <p><Link to=\"/login\">Se connecter ?</Link></p>\n                            </CustomBox>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}","/home/nasser/Desktop/projects/pfmustelea-finance/src/components/CustomBox/index.tsx",[],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/index.tsx",["131"],"/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/ChangePassword/index.tsx",["132","133"],"import { Form, Formik, FormikHelpers } from \"formik\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { CustomButton } from \"../../../../components/CustomButton\";\nimport { CustomField } from \"../../../../components/Field\";\nimport { IChangePassword } from \"../../../../interfaces\";\nimport { changePassword } from \"../../../auth/actions\";\nimport { useDispatchUser } from \"../../../auth/providers\";\n\nconst ContentFormWrapper = styled.div`\n    border: 2px solid green;\n    border-radius: 10% 10% 10% 10%;\n    background: rgb(27,195,190);\nbackground: linear-gradient(180deg, rgba(27,195,190,1) 0%, rgba(27,195,75,1) 56%);\n    display: grid;\n    grid-template-columns: repeat(4, 1fr);\n    grid-template-rows: 1fr 1fr 1fr;\n    grid-template-areas: \"input1 input1 div1 div1\" \"input2 input2 input3 input3\" \"div2  div2 button2 button1\";\n    gap: 20px;\n    padding: 30px;\n    width: 100%;\n    align-items: center;\n`\n\nconst ChangePassword = ({ modifying }: { modifying?: boolean }) => {\n    const { dispatch } = useDispatchUser();\n\n    const handleSubmit = async ({ oldPassword, newPassword, validatePassword }: IChangePassword, { setSubmitting, }: FormikHelpers<IChangePassword>) => {\n        const status = await changePassword(dispatch, { oldPassword, newPassword, validatePassword })\n\n    }\n\n    const handleCancel = () => { }\n    return (\n\n\n        <Formik\n            initialValues={{\n                oldPassword: '',\n                newPassword: '',\n                validatePassword: ''\n            }}\n            onSubmit={handleSubmit}\n        >\n            {\n                ({ handleChange, values: { oldPassword, newPassword, validatePassword }, handleSubmit }) => {\n                    return (\n                        <Form>\n                            <ContentFormWrapper>\n                                <CustomField className=\"input1\" modifying={modifying} type=\"password\" field=\"oldPassword\" value={oldPassword} handleChange={handleChange} label=\"MDP actuel\" />\n                                <div className=\"div1\"></div>\n                                <CustomField className=\"input2\" modifying={modifying} type=\"password\" field=\"newPassword\" value={newPassword} handleChange={handleChange} label=\"nouveau mdp\" />\n                                <CustomField className=\"input3\" type=\"password\" modifying={modifying} field=\"validatePassword\" value={validatePassword} handleChange={handleChange} label=\"confirmer mdp\" />\n                                <div className=\"div2\"></div>\n                                <CustomButton className=\"button1\" handleSubmit={handleSubmit} label=\"Valider\" disbaled={oldPassword.length > 0 && newPassword.length > 0 && validatePassword.length > 0} />\n                                <Link to=\"/home\" className=\"button2\">\n                                </Link>\n                            </ContentFormWrapper>\n                        </Form>\n                    )\n                }\n            }\n        </Formik>\n    )\n}\n\nexport default ChangePassword;","/home/nasser/Desktop/projects/pfmustelea-finance/src/features/Home/Profil/User/index.tsx",["134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"135","replacedBy":"139"},{"ruleId":"137","replacedBy":"140"},{"ruleId":"141","severity":1,"message":"142","line":11,"column":30,"nodeType":"143","messageId":"144","endLine":11,"endColumn":33},{"ruleId":"145","severity":1,"message":"146","line":5,"column":13,"nodeType":"147","messageId":"148","endLine":5,"endColumn":24},{"ruleId":"145","severity":1,"message":"149","line":162,"column":41,"nodeType":"147","messageId":"148","endLine":162,"endColumn":47},{"ruleId":"145","severity":1,"message":"149","line":233,"column":41,"nodeType":"147","messageId":"148","endLine":233,"endColumn":47},{"ruleId":"135","replacedBy":"150"},{"ruleId":"137","replacedBy":"151"},{"ruleId":"145","severity":1,"message":"152","line":15,"column":15,"nodeType":"147","messageId":"148","endLine":15,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":6,"column":13,"nodeType":"147","messageId":"148","endLine":6,"endColumn":24},{"ruleId":"145","severity":1,"message":"152","line":30,"column":15,"nodeType":"147","messageId":"148","endLine":30,"endColumn":21},{"ruleId":"145","severity":1,"message":"153","line":34,"column":11,"nodeType":"147","messageId":"148","endLine":34,"endColumn":23},{"ruleId":"145","severity":1,"message":"153","line":55,"column":11,"nodeType":"147","messageId":"148","endLine":55,"endColumn":23},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],["154"],["155"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'currentUser' is assigned a value but never used.","Identifier","unusedVar","'result' is assigned a value but never used.",["154"],["155"],"'status' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]